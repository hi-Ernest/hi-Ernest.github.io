<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工作 on Always Exploring</title><link>https://hi-ernest.github.io/tags/%E5%B7%A5%E4%BD%9C/</link><description>Recent content in 工作 on Always Exploring created by</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>2023 ErnestChen All rights reserved</copyright><lastBuildDate>Sat, 04 Nov 2023 09:34:00 +0800</lastBuildDate><atom:link href="https://hi-ernest.github.io/tags/%E5%B7%A5%E4%BD%9C/index.xml" rel="self" type="application/rss+xml"/><item><title>自我复盘和前端协作问题</title><link>https://hi-ernest.github.io/blog/review-myself-todo/</link><pubDate>Sat, 04 Nov 2023 09:34:00 +0800</pubDate><guid>https://hi-ernest.github.io/blog/review-myself-todo/</guid><description>&lt;h3 id="回顾过程">回顾过程&lt;/h3>
&lt;p>昨天开始着手前天接到的新需求，比较简单就加个字段，但涉及不同页面需要前端配合增加个勾选框，如果勾选就多传入一个参数即可，后端处理跳过校验逻辑。&lt;/p>
&lt;p>下午在群里抛出联调发现的问题（我吸取之前的经验，发的文字会注意些温和些，避免他人歧义），已经把截图和接口以及参数一并发送，外包老哥还不明白，临近饭点我发送“还不明白 速度过一下？”刚想打开视频会议，结果老哥不专业来了句“不明白 不写了 xxx写吧”。我整个人惊了，还能这样，紧接着也在思考是不是自己哪儿做的不合适&amp;hellip;&lt;/p>
&lt;p>上会议和正式前端老哥聊了聊，获取的信息是针对目前公司合作方式，那老哥希望私下沟通，而不是群里沟通，显得我push到他，显得他不干活，担心群里的老板会有意见啥的&amp;hellip;我一听整不会了，在群里抛出问题，是想要分享信息，发现问题一起解决问题，不是为了谴责某个人更不是摔锅。&lt;/p>
&lt;p>如果这样想工作的专业度上真差点意思，而且体感上平等的工作上还得哄着求着合作的感觉，而且就算你有这样的担心和不习惯这种方式，可以主动找我来沟通，仅仅让他人传达是啥意思尼，为什么不自己主动沟通，寻找方法解决现状问题尼，难道心里揣着“我只是外包，你没必要push我，我也没必要推进和解决问题，这不是我干的事情”这样的心态吗？如果真抱着这样心境，做什么事能好尼。我不理解，但是尊重每个人想法和处理方式！&lt;/p>
&lt;p>我积极推进问题的解决，从未抱着摔锅心态，这就是我的课题，而你认为我针对是你这个人而不是事情的话，这是你的课题。&lt;/p>
&lt;h3 id="困局">困局&lt;/h3>
&lt;p>外包前端工程和理解能力不行，又不主动，不找自己原因去修正，情绪还外放；导致协作做需求效率低下，沟通不畅效率更低下
但我现在做的产出依赖前端付出人力，没有前端又不行，否则产出没法体现&lt;/p>
&lt;h3 id="破局">破局&lt;/h3>
&lt;ul>
&lt;li>寻找机会直接跑路，远离环境&lt;/li>
&lt;li>主动兼容合作方，寻找比较好的合作方式&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>目前还是采用第二种，毕竟没有更好的选择还是不轻易离开&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>遇到问题就解决问题，也是人生宝贵经历和考验，去“兴致勃勃的去失败”也不见得是坏事&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>创建没有老板仅大头兵群，依然在群里沟通&lt;/li>
&lt;li>注意发文字不要用反问句，改成陈述句沟通&lt;/li>
&lt;li>细节上多注意，截图截详细些，给予的步骤明确1234每个点准确，避免歧义（想象对方啥都不懂背景，依然能够看懂并理解）&lt;/li>
&lt;li>还是沟通不清楚，直接语音拉会，还不懂先和正式老哥沟通讲清楚，再让他们之间再做沟通&lt;/li>
&lt;li>出现问题，还是得让他们给出明确解决的时间点，回过头在去review和验证（珍惜自己的时间，提高自己的工作效率，保证自己产出！）&lt;/li>
&lt;/ul></description></item><item><title>和前端沟通问题个人复盘</title><link>https://hi-ernest.github.io/blog/review-fe-cooperation-issues/</link><pubDate>Thu, 02 Nov 2023 09:24:00 +0800</pubDate><guid>https://hi-ernest.github.io/blog/review-fe-cooperation-issues/</guid><description>&lt;h3 id="回顾整个过程">回顾整个过程&lt;/h3>
&lt;p>前天1031和前端沟通还是着急了，确实有点控制不住自几。主要是他老是说的有的没的，对解决当下问题没有任何帮助，感觉还把甩锅到我这边，大致意思他们还在解决问题，等解决了才能一起投入测试，不是他们不测试，说正常都是前端测一遍没问题，才让后端测试回归的。我笑了，这样算前后端联调？现在前端问题不断，那什么时候能解决，还没解决我后端就不投入测试了吗？在这干坐等你们解决？现在我发现问题大多集中前端样式？按照这样个人感觉无法达上线标准的。每个人都有各自的课题，我的课题是在排期内完成开发和自测，在前后端联调，测试全流程发现问题，解决问题，后端问题就修复，前端就抛给前端修复。你不需要对我个人评价，对事不对人，这件事你们做的不好，没有给我任何有益的输入点，整个联调测试压力都放在后端，这事情本身就是不合理的！&lt;/p>
&lt;h3 id="沟通推进中我自身可以改进的地方">沟通推进中我自身可以改进的地方&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>（找准漏洞，言简意赅强而有力回击）&lt;/strong> 沉住气深呼吸，先不着急发言，先听合作方说，如果是甩锅点，找漏洞反问句式有效回击&lt;/li>
&lt;li>&lt;strong>（抛出问题后，让合作方给出明确解决时间，并群里同步会议结论，到时间再询问进度，什么时候没问题再进入下一阶段联调）&lt;/strong> 联调发现一方问题不断，存在上线延期风险，及时向上汇报，如果哪一方问题比较多，先让其自测解决大部分问题后在集中联调&lt;/li>
&lt;li>&lt;strong>（项目把控风险上，谁来评估和拍板延期多久，如果延期发现还是有问题尼）合作流程中，谁来评估上线是否有风险（把控后端/前端整体进度）&lt;/strong> ，如果出现了风险应该找谁统一收口来判断是否延期，需要延期几天。（而不是后端抛出风险，前端说没问题这两天可以改完，结果还是没改完，这种情况怎么办）&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>这种case和小组长聊完，确定找对应小组长来评判，毕竟现在做的toD对内，而不是着急的业务需求，以及有对应的PM和业务方催促&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>（梳理现状不合理性和寻找解决方法）&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>正常流程中后端在技术方案评审时候，列出所有涉及接口，前端需要了解业务背景和接口设计，以及给予输入补充可能缺少的接口，避免漏需求&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>现状前端人力不足和个人能力差异，对业务需求理解不够无法在技术评审阶段时理清接口list，给予其他输入补充方案也好像也不太能够。目前解法：在技术评审还是列出涉及的接口，以及页面交互中如何使用该接口，给予接口时候分批给予，比如先做完xx模块的CRUD就先给，出入参和返回数据也一并给予，这就需要我们后端先开发完成并完成自测。虽然会变成串行开发，但这也是当下环境为数不多比较好的解法。&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>在技术评审完前后端接口定义完毕，数据结构确定后，前后端都需要自行mock数据，各自按照约定独立开发&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>当下现状是在联调前自测页面的交互等，还是依赖于后端数据返回，同上需要后端先开发；以及接口文档介于公司没有统一的接口测试平台，还是放在wiki方式给予出入参定义，以及字段含义，在给予时需要后端将数据返回&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>
&lt;p>开发排期需要包括开发和自测，联调时间应该前后端在之前将项目部署泳道或者sit环境，双方可以直接在页面测试逻辑&lt;/p>
&lt;/li>
&lt;li>
&lt;p>（一定在技术详评完能双方直接进入开发，避免过多时间讨论）在技术方案评审时，把交互和对应接口都对齐，可以在详评前先找前端对一版有初步沟通&lt;/p>
&lt;/li>
&lt;li>
&lt;p>（联调前一天提前部署好项目在联调有环境，联调时双方直接测试）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>（联调问题先群里发出来，问题多需要文档记录）&lt;/p>
&lt;/li>
&lt;/ol></description></item></channel></rss>